name: Rust
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  # Pinned toolchain for linting
  ACTIONS_LINTS_TOOLCHAIN: 1.62.0

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental || false }}
    strategy:
      matrix:
        include:
          - channel: stable
          - channel: beta
            experimental: true
          - channel: nightly
            experimental: true
          - channel: msrv
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libbz2-dev liblzma-dev libzstd-dev
      - name: Select toolchain version
        run: |
          case "${{ matrix.channel }}" in
          msrv)
              msrv=$(cargo metadata --format-version 1 --no-deps | \
                  jq -r '.packages | .[].rust_version')
              echo "Crate MSRV: $msrv"
              echo "TOOLCHAIN=$msrv" >> $GITHUB_ENV
              ;;
          *)
              echo "TOOLCHAIN=${{ matrix.channel }}" >> $GITHUB_ENV
              ;;
          esac
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.TOOLCHAIN }}
          default: true
      - name: cargo build
        run: cargo build
      - name: cargo test
        run: cargo test
      - name: cargo test (no features)
        run: cargo test --no-default-features
  lints:
    name: Lints, pinned toolchain
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libbz2-dev liblzma-dev libzstd-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env['ACTIONS_LINTS_TOOLCHAIN']  }}
          default: true
          components: rustfmt, clippy
      - name: cargo clippy (warnings)
        run: cargo clippy -- -D warnings
      - name: cargo fmt (check)
        run: cargo fmt -- --check -l
